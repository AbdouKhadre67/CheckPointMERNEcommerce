{"ast":null,"code":"// src/reducers/taskReducer.js\nimport { ADD_TASK, TOGGLE_TASK, EDIT_TASK, REMOVE_TASK, FILTER_TASKS } from '../actions/taskActions';\nconst initialState = {\n  tasks: [],\n  filter: 'all' // Possible values: 'all', 'done', 'notDone'\n};\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return {\n        ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n    case TOGGLE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload ? {\n          ...task,\n          isDone: !task.isDone\n        } : task)\n      };\n    case EDIT_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.map(task => task.id === action.payload.id ? {\n          ...task,\n          description: action.payload.newDescription\n        } : task)\n      };\n    case REMOVE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n    case FILTER_TASKS:\n      return {\n        ...state,\n        filter: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["ADD_TASK","TOGGLE_TASK","EDIT_TASK","REMOVE_TASK","FILTER_TASKS","initialState","tasks","filter","taskReducer","state","action","type","payload","map","task","id","isDone","description","newDescription"],"sources":["C:/Users/TOSHIBA PC/Desktop/CheckPoint/Redux/REDUX-Todo-List-app/src/reducers/taskReducer.js"],"sourcesContent":["// src/reducers/taskReducer.js\r\nimport { ADD_TASK, TOGGLE_TASK, EDIT_TASK, REMOVE_TASK, FILTER_TASKS } from '../actions/taskActions';\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  filter: 'all', // Possible values: 'all', 'done', 'notDone'\r\n};\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return { ...state, tasks: [...state.tasks, action.payload] };\r\n    case TOGGLE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((task) =>\r\n          task.id === action.payload ? { ...task, isDone: !task.isDone } : task\r\n        ),\r\n      };\r\n    case EDIT_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((task) =>\r\n          task.id === action.payload.id ? { ...task, description: action.payload.newDescription } : task\r\n        ),\r\n      };\r\n    case REMOVE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((task) => task.id !== action.payload),\r\n      };\r\n    case FILTER_TASKS:\r\n      return { ...state, filter: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n"],"mappings":"AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,QAAQ,wBAAwB;AAEpG,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,KAAK,CAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKX,QAAQ;MACX,OAAO;QAAE,GAAGS,KAAK;QAAEH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEI,MAAM,CAACE,OAAO;MAAE,CAAC;IAC9D,KAAKX,WAAW;MACd,OAAO;QACL,GAAGQ,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACO,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,GAAG;UAAE,GAAGE,IAAI;UAAEE,MAAM,EAAE,CAACF,IAAI,CAACE;QAAO,CAAC,GAAGF,IACnE;MACF,CAAC;IACH,KAAKZ,SAAS;MACZ,OAAO;QACL,GAAGO,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACO,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,GAAG;UAAE,GAAGD,IAAI;UAAEG,WAAW,EAAEP,MAAM,CAACE,OAAO,CAACM;QAAe,CAAC,GAAGJ,IAC5F;MACF,CAAC;IACH,KAAKX,WAAW;MACd,OAAO;QACL,GAAGM,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACC,MAAM,CAAEO,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAChE,CAAC;IACH,KAAKR,YAAY;MACf,OAAO;QAAE,GAAGK,KAAK;QAAEF,MAAM,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAC7C;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}